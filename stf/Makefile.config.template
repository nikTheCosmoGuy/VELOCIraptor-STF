#This is the Makefile.config that sets various compilation options

#===========================================
#type of system, where libraries are located, etc
#===========================================
#SYSTEM="intel-standard"
#SYSTEM="gcc-standard"
#SYSTEM="cray"

#For the following options, to turn off simply comment out

#===========================================
#Parallel APIs to turn on
#===========================================
MPI="on"
#reduce impact of MPI memory overhead at the cost of extra cpu cycles, suggested this be turned on
MPIREDUCE="on"
OMP="on"
#===========================================

#===========================================
#if libraries are local
#===========================================
LOCALGSL="on"
LOCALFFTW="on"
LOCALHDF="on"
LOCALADIOS="on"
LOCALXDR="on"
#===========================================

#===========================================
#Adjust precision
#===========================================
#all calculations/properties stored as floats
SINGLEPRECISION="on"
#all integers are long ints. Enable this if dealing with more than MAXINT total number of particles
LONGINT="on"
#===========================================

#===========================================
#Adjust the structure of the particle data
#===========================================
#do not store the mass as all particles are the same mass
NOMASS="on"
#use single precision to store positions,velocities, and possibly other internal properties
SINGLEPARTICLEPRECISION="on"
#use unsigned ints (size deteremined by whether using long int or not) to store permanent 'particle' ids
#UNSIGNEDPARTICLEPIDS="on"
#use unsigned ints (size deteremined by whether using long int or not) to store ids (index value). Note that velociraptor
#uses negative index values for sorting purposes so ONLY ENABLE if library to be used with other codes
#UNSIGNEDPARTICLEIDS="on"
#for hydro simulations on can turn on several extra data structures in the Particle class, used when compiling the NBody library
#activate gas
USEGAS="on"
#activate stars only
USESTARS="on"
#also bh associated physics
USEBH="on"
#stars and gas
USEBARYONS="on"
#also use cosmic ray quantities, currently nothing enabled
USECOSMICRAYS="on"
#activate everytyhing
USEHYDRO="on"
#===========================================

#===========================================
#Adjust the precision/memory footprint of the KDTree
#===========================================
#if tree is going to be built on > MAXINT particles then enable
#LARGEKDTREE="on"
#===========================================

#===========================================
#Adjust MPI domain size
#===========================================
#if mpi domain is going to contain more than maxshort number of mpi processes then enable
#LARGEMPIDOMAIN="on"
#===========================================

#===========================================
#Adjust TreeFrog ID type, useful for minimzing memory footprint
#===========================================
#if mpi domain is going to contain more than maxshort number of mpi processes then enable
#TREEFROGLONGIDS="on"
#TREEFROGUNSIGNEDIDS="on"
#===========================================

#===========================================
#Adjust the operation of the code
#===========================================
#only calculate local density distribution for particles residing in field objects (but using all particles to estimate quantity)
STRUCTUREDEN="on"
#or just use particles inside field objects, reducing cpu cycles but will bias estimates for particle in outer region of field structures, overrides STRUCTUREDEN
#HALODEN="on"
#flag useful for zoom simulations with a high resolution region
#ZOOMSIM="on"
#if compiling for swift only, useful to set
SWIFTINTERFACE="on"
#===========================================

#===========================================
#for debugging
#===========================================
#DEBUG="on"
#===========================================

#===========================================
#io
#===========================================
#for gadget format flags, that is double precision pos and vel, single precison mass, long ids, header type
GLONGID="on"
GDPOS="on"
GSMASS="on"
GHEAD2="on"
#for gadget files that contain extra hydro info
GSPHINFO="on"
GSTARINFO="on"
GBHINFO="on"

#for hdf input/output
HDFENABLE="on"

#for XDF (nchilada) input
XDRENABLE="on"

#for adios output
ADIOSENABLE="on"

#===========================================

#===========================================
#Compiler problems
#===========================================
#if really old compiler will probably have to update system but also pass this flag
#CCOMPILERTOOOLD="on"


#===========================================
#alter if necessary to point to local libraries
#===========================================
ifeq ($(LOCALGSL),"on")
    GSL_DIR =
    GSL_INCL = -I$(GSL_DIR)/include/
    GSL_LIBS = -L$(GSL_DIR)/lib/
    GSL_CONFIG =
    GSL_CFLAGS = $(GSL_INCL) $(GSL_LIBS)
endif
ifeq ($(LOCALFFTW),"on")
    FFTW_DIR =
    FFTW_INCL = -I$(FFTW_DIR)/include/
    FFTW_LIBS = -L$(FFTW_DIR)/lib/
    FFTW_CFLAGS =  $(FFTW_INCL) $(FFTW_LIBS)
endif
ifeq ($(HDFENABLE)$(LOCALHDF),"on""on")
    HDF_DIR =
    HDF_INCL = -I$(HDF_DIR)/include/
    HDF_LIBS = -L$(HDF_DIR)/lib/
endif
ifeq ($(XDRENABLE)$(LOCALXDR),"on""on")
    XDR_DIR =
    XDR_INCL = -I$(XDR_DIR)/include/
    XDR_LIBS = -L$(XDR_DIR)/lib/
endif
ifeq ($(ADIOSENABLE)$(LOCALADIOS),"on""on")
    ADIOS_DIR =
    ADIOS_INCL = -I$(ADIOS_DIR)/include/
    ADIOS_LIBS = -L$(ADIOS_DIR)/lib/
endif
#===========================================

#===========================================
#Add systems as necessary
#===========================================
ifeq ($(SYSTEM),"intel-standard")
    C+ = icc -Kc++
    COMPILEFLAGS = -O3 -std=c++17 -fPIC
endif
ifeq ($(SYSTEM),"gcc-standard")
    C+ = g++
    COMPILEFLAGS = -O3 -std=c++17 -fPIC
endif
ifeq ($(SYSTEM),"cray")
    C+ = CC
    COMPILEFLAGS = -O3 -std=c++17 -fPIC
endif

#===========================================
#===========================================
#parallel api, might need to customize
#===========================================

ifeq ($(MPI),"on")
ifeq ($(SYSTEM),"cray")
    C+ = CC
    PARALLEL+=-DUSEMPI
else
    C+ = mpic++
    MPI_COMPILE_FLAGS = $(shell $(C+) --showme:compile)
    MPI_LINK_FLAGS = $(shell $(C+) --showme:link)
    PARALLEL+=-DUSEMPI $(MPI_COMPILE_FLAGS)
endif
endif

ifeq ($(OMP),"on")
ifeq ($(SYSTEM),"intel-standard")
    PARALLEL += -qopenmp -DUSEOPENMP
else ifeq ($(SYSTEM),"cray")
    PARALLEL += -DUSEOPENMP
else
    PARALLEL += -fopenmp -DUSEOPENMP
endif
endif

ifeq ($(SYSTEM)$(MPI)$(OMP),"intel-standard""on""on")
    PARALLEL += -mt_mpi
endif

ifeq ($(MPIREDUCE),"on")
    PARALLEL += -DMPIREDUCEMEM
endif
#===========================================

#===========================================
#LEAVE BELOW UNTOUCHED
#===========================================

#===========================================
#related to internal data/precision of calculations, integers
#===========================================
ifeq ($(SINGLEPRECISION),"on")
    COMPILEFLAGS+= -DSINGLEPRECISION
endif
ifeq ($(LONGINT),"on")
    COMPILEFLAGS+= -DLONGINT
endif
ifeq ($(NOMASS),"on")
    COMPILEFLAGS+= -DNOMASS
endif
ifeq ($(SINGLEPARTICLEPRECISION),"on")
    COMPILEFLAGS+= -DLOWPRECISIONPOS
endif
ifeq ($(UNSIGNEDPARTICLEPIDS),"on")
    COMPILEFLAGS+= -DPARTICLEUPIDS
endif
ifeq ($(UNSIGNEDPARTICLEIDS),"on")
    COMPILEFLAGS+= -DPARTICLEUIDS
endif
ifeq ($(LARGEKDTREE),"on")
    COMPILEFLAGS+= -DLARGETREE
endif
ifeq ($(LARGEMPIDOMAIN),"on")
    COMPILEFLAGS+= -DHUGEMPI
endif
ifeq ($(TREEFROGLONGIDS),"on")
ifeq ($(TREEFROGUNSIGNEDIDS),"on")
    COMPILEFLAGS+= -DTREEFROGLONGUIDS
else
    COMPILEFLAGS+= -DTREEFROGLONGIDS
endif
else
ifneq ($(TREEFROGUNSIGNEDIDS),"on")
    COMPILEFLAGS+= -DTREEFROGINTIDS
endif
endif
ifeq ($(SWIFTINTERFACE),"on")
    COMPILEFLAGS+= -DSWIFTINTERFACE
endif

C+FLAGS = $(PARALLEL) $(COMPILEFLAGS)
#===========================================

#===========================================
#Adjust calculations
#===========================================
ifeq ($(STRUCTUREDEN),"on")
ifneq ($(HALODEN),"on")
    C+FLAGS+= -DSTRUCDEN
endif
endif
ifeq ($(HALODEN),"on")
    C+FLAGS+= -DHALOONLYDEN
endif
ifeq ($(ZOOMSIM),"on")
    C+FLAGS+= -DHIGHRES
    ZOOMNAME=-zoom
endif
#===========================================

#===========================================
ifeq ($(DEBUG),"on")
    C+FLAGS+= -g
endif
#===========================================

#===========================================
ifeq ($(CCOMPILERTOOOLD),"on")
    C+FLAGS+= -DOLDCCOMPILER
endif
#===========================================

#===========================================
#io stuff
#===========================================
ifeq ($(GLONGID),"on")
    C+FLAGS+= -DGADGETLONGID
endif
ifeq ($(GDPOS),"on")
    C+FLAGS+= -DGADGETDOUBLEPRECISION
endif
ifeq ($(GSMASS),"on")
    C+FLAGS+= -DGADGETSINGLEMASSPRECISION
endif
ifeq ($(GHEAD2),"on")
    C+FLAGS+= -DGADGET2FORMAT
endif

ifeq ($(GSPHINFO),"on")
    C+FLAGS+= -DEXTRASPHINFO
endif
ifeq ($(GSTARINFO),"on")
    C+FLAGS+= -DEXTRASTARINFO
endif
ifeq ($(GBHINFO),"on")
    C+FLAGS+= -DEXTRABHINFO
endif

ifeq ($(HDFENABLE),"on")
    C+FLAGS+= -DUSEHDF
		# Comment out if your HDF5 library is version 1.10.0 or older
    C+FLAGS+= -DHDF5_NEWER_THAN_1_10_0
    C+LIBS+= -lhdf5_hl_cpp -lhdf5_cpp -lhdf5_hl -lhdf5 -lz -lrt -ldl
    IFLAGS+= $(HDF_INCL)
    LFLAGS+= $(HDF_LIBS)
endif

ifeq ($(ADIOSENABLE),"on")
    C+FLAGS+= -DUSEADIOS
    C+LIBS+= $(shell $(ADIOS_DIR)/bin/adios_config -c -f)
    IFLAGS+= $(shell $(ADIOS_DIR)/bin/adios_config -c -f)
    LFLAGS+= $(shell $(ADIOS_DIR)/bin/adios_config -l -f)
endif

ifeq ($(XDRENABLE),"on")
    C+FLAGS+= -DUSEXDR
    C+LIBS+= -lz -lrt -ldl
    IFLAGS+= $(HDF_INCL)
    LFLAGS+= $(HDF_LIBS)
endif

ifeq ($(SWIFTINTERFACE),"on")
        SWIFTDIR = /home/pelahi/software/swiftsim/
        SWIFT_INCL = -I${SWIFTDIR}/src/ -I${SWIFTDIR}/src/gravity/Default/ -I${SWIFTDIR}/src/hydro/Default/
endif

#===========================================


#===========================================
#hydro stuff
#===========================================
IHYDRO="off"
ifeq ($(USEBARYONS),"on")
    USEGAS="on"
    USESTARS="on"
    IHYDRO="on"
endif
ifeq ($(USEHYDRO),"on")
    USEGAS="on"
    USESTARS="on"
    USEBH="on"
    IHYDRO="on"
endif

ifeq ($(USEGAS),"on")
    HYDROFLAGS+= -DGASON
    GASNAME=gas
    IHYDRO="on"
endif
ifeq ($(USESTARS),"on")
    HYDROFLAGS+= -DSTARON
    STARNAME=star
    IHYDRO="on"
endif
ifeq ($(USEBH),"on")
    HYDROFLAGS+= -DBHON
    BHNAME=bh
    IHYDRO="on"
endif
HYDRONAME=
ifeq ($(IHYDRO),"on")
    HYDRONAME=-$(GASNAME)$(STARNAME)$(BHNAME)
endif
COMPILEFLAGS+= $(HYDROFLAGS)
#===========================================

#===========================================
#default stuff for directory info
#===========================================
STFDIR = $(shell pwd | awk -F 'stf' '{$$2="";print $$1}')stf/
STFBINDIR = $(STFDIR)/bin/
STFLIBDIR = $(STFDIR)/lib/
STFINCLUDEDIR = $(STFDIR)/include/
DOCDIR = $(STFDIR)/doc/
EXECBASENAME = stf
#libraries
NBODYDIR = $(STFDIR)/NBodylib/
NBODYSRCDIR = $(NBODYDIR)/src/
NBODYLIBDIR = $(NBODYDIR)/lib/
NBODYINCLUDEDIR = $(NBODYDIR)/include/
#===========================================

#===========================================
#set flags
#===========================================
IFLAGS += -I$(NBODYINCLUDEDIR) -I$(STFINCLUDEDIR) $(GSL_INCL) $(SWIFT_INCL)
LFLAGS += -L$(NBODYLIBDIR) $(GSL_LIBS) $(MPI_LINK_FLAGS)
C+LIBS += -lm -lAnalysis -lKD -lNBody -lMath -lgsl -lgslcblas
NBODYIFLAGS = -I$(NBODYSRCDIR)/Math/ -I$(NBODYSRCDIR)/NBody/ -I$(NBODYSRCDIR)/Analysis/ -I$(NBODYSRCDIR)/Cosmology/ -I$(NBODYSRCDIR)/InitCond/ -I$(NBODYSRCDIR)/KDTree $(GSL_CFLAGS) $(SWIFT_INCL) #-I$(BOOST_INCL) -I$(MPI_INCL)

NBODYPARALLEL =
NBODYC+FLAGS = $(NBODYPARALLEL) $(COMPILEFLAGS) -c
LIBCHECK=$(NBODYDIR)/*
#===========================================

#===========================================
#executible name
#===========================================
EXEC = $(EXECBASENAME)$(HYDRONAME)$(ZOOMNAME)
#===========================================
